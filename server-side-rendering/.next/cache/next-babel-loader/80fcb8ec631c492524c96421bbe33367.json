{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"D:\\\\work\\\\next-rendering-example\\\\cliente-side-rendering\\\\pages\\\\pokemon\\\\[name].js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nvar usePokemon = function usePokemon(name) {\n  _s();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pokemon = _React$useState2[0],\n      setPokemon = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!name) {\n      setPokemon(null);\n      return;\n    }\n\n    var getPokemon = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"/api/pokemon?name=\".concat(escape(name))).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n                    var text;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return res.text();\n\n                          case 2:\n                            text = _context.sent;\n                            return _context.abrupt(\"return\", text ? JSON.parse(text) : {});\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n                data = _context2.sent;\n\n                if (data && Object.keys(data).length > 0) {\n                  setPokemon(_objectSpread(_objectSpread({}, data), {}, {\n                    image: \"/images/\".concat(data.id, \".png\")\n                  }));\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getPokemon();\n  }, [name]);\n  return pokemon;\n};\n\n_s(usePokemon, \"cYyGFEpoV+taaQmIEbPwGxCid+w=\");\n\nexport default _s2(function () {\n  _s2();\n\n  var _useRouter = useRouter(),\n      name = _useRouter.query.name;\n\n  var pokemon = usePokemon(name);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Pokemon - \", name)), __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, pokemon ? __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"card--title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, pokemon.name), __jsx(\"span\", {\n    className: \"card--subtitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, pokemon.type.join(', ')), __jsx(\"img\", {\n    src: pokemon.image,\n    alt: pokemon.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), Object.entries(pokemon.base).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return __jsx(\"span\", {\n      className: \"card--details\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, key, \":\"), value);\n  })) : __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Pokemon \\\"\".concat(name, \"\\\" n\\xE3o encontrado.\")))));\n}, \"w56DUYMnOiU/mxJo2p6xToPaKzs=\", false, function () {\n  return [useRouter, usePokemon];\n});","map":{"version":3,"sources":["D:/work/next-rendering-example/cliente-side-rendering/pages/pokemon/[name].js"],"names":["Head","useRouter","usePokemon","name","React","useState","pokemon","setPokemon","useEffect","getPokemon","fetch","escape","then","res","text","JSON","parse","data","Object","keys","length","image","id","query","type","join","entries","base","map","key","value"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nconst usePokemon = (name) => {\n  const [pokemon, setPokemon] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!name) {\n      setPokemon(null);\n      return;\n    }\n\n    const getPokemon = async () => {\n      const data = await fetch(`/api/pokemon?name=${escape(name)}`).then(async res => {\n        const text = await res.text();\n        return text ? JSON.parse(text) : {};\n      });\n\n      if (data && Object.keys(data).length > 0) {\n        setPokemon({\n          ...data,\n          image: `/images/${data.id}.png`\n        });\n      }\n    }\n\n    getPokemon();\n  }, [name]);\n\n  return pokemon;\n}\n\nexport default () => {\n  const { query: { name } } = useRouter();\n  const pokemon = usePokemon(name);\n\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Pokemon - {name}</title>\n      </Head>\n\n      <main>\n        <div className=\"row\">\n          {pokemon ? (\n            <div className=\"card\">\n              <h3 className=\"card--title\">{pokemon.name}</h3>\n              <span className=\"card--subtitle\">{pokemon.type.join(', ')}</span>\n              <img src={pokemon.image} alt={pokemon.name} />\n              {Object.entries(pokemon.base).map(([key, value]) => (\n                <span className=\"card--details\">\n                  <strong>{key}:</strong>\n                  {value}\n                </span>\n              ))}\n            </div>\n          ) : <h1>{`Pokemon \"${name}\" não encontrado.`}</h1>}\n        </div>\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
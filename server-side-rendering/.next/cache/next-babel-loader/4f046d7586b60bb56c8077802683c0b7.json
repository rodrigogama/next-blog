{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\next-rendering-example\\\\cliente-side-rendering\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\n\nconst usePokemon = query => {\n  const [pokemons, setPokemons] = React.useState(null);\n  React.useEffect(() => {\n    if (!query) {\n      setPokemons(null);\n      return;\n    }\n\n    const getPokemon = async () => {\n      const data = await fetch(`/api/search?q=${escape(query)}`).then(res => res.json());\n      setPokemons(data.map(e => _objectSpread(_objectSpread({}, e), {}, {\n        image: `/images/${e.id}.png`\n      })));\n    };\n\n    getPokemon();\n  }, [query]);\n  return pokemons;\n};\n\nexport default function Home() {\n  const [query, setQuery] = React.useState('');\n  const pokemons = usePokemon(query);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Pokemon\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Search for a pokemon\",\n    type: \"search\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, pokemons && pokemons.map(pokemon => __jsx(\"div\", {\n    className: \"card\",\n    key: pokemon.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"card--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, pokemon.name), __jsx(\"div\", {\n    className: \"card--subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, pokemon.type.join(', ')), __jsx(\"img\", {\n    src: pokemon.image,\n    alt: pokemon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/work/next-rendering-example/cliente-side-rendering/pages/index.js"],"names":["React","Head","usePokemon","query","pokemons","setPokemons","useState","useEffect","getPokemon","data","fetch","escape","then","res","json","map","e","image","id","Home","setQuery","event","target","value","pokemon","name","type","join"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe,IAAf,CAAhC;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACJ,KAAL,EAAY;AACVE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD;;AAED,UAAMG,UAAU,GAAG,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,iBAAgBC,MAAM,CAACR,KAAD,CAAQ,EAAhC,CAAL,CAAwCS,IAAxC,CAA6CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAApD,CAAnB;AACAT,MAAAA,WAAW,CAACI,IAAI,CAACM,GAAL,CAASC,CAAC,oCACjBA,CADiB;AAEpBC,QAAAA,KAAK,EAAG,WAAUD,CAAC,CAACE,EAAG;AAFH,QAAV,CAAD,CAAX;AAID,KAND;;AAQAV,IAAAA,UAAU;AACX,GAfD,EAeG,CAACL,KAAD,CAfH;AAiBA,SAAOC,QAAP;AACD,CArBD;;AAwBA,eAAe,SAASe,IAAT,GAAgB;AAC7B,QAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoBpB,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMF,QAAQ,GAAGF,UAAU,CAACC,KAAD,CAA3B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,sBAAnB;AAA0C,IAAA,IAAI,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAEA,KAA/D;AAAsE,IAAA,QAAQ,EAAEkB,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAaS,OAAO,IAC/B;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,OAAO,CAACN,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BM,OAAO,CAACC,IAAtC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAkB,IAAlB,CAAjC,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEH,OAAO,CAACP,KAAlB;AAAyB,IAAA,GAAG,EAAEO,OAAO,CAACC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADW,CADf,CAHF,CANF,CADF;AAsBD","sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\n\r\nconst usePokemon = (query) => {\r\n  const [pokemons, setPokemons] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!query) {\r\n      setPokemons(null);\r\n      return;\r\n    }\r\n\r\n    const getPokemon = async () => {\r\n      const data = await fetch(`/api/search?q=${escape(query)}`).then(res => res.json());\r\n      setPokemons(data.map(e => ({\r\n        ...e,\r\n        image: `/images/${e.id}.png`\r\n      })));\r\n    }\r\n\r\n    getPokemon();\r\n  }, [query]);\r\n\r\n  return pokemons;\r\n}\r\n\r\n\r\nexport default function Home() {\r\n  const [query, setQuery] = React.useState('');\r\n  const pokemons = usePokemon(query);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Head>\r\n        <title>Pokemon</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      <main>\r\n        <input placeholder=\"Search for a pokemon\" type=\"search\" value={query} onChange={event => setQuery(event.target.value)} />\r\n\r\n        <div className=\"row\">\r\n          {pokemons && pokemons.map(pokemon => (\r\n            <div className=\"card\" key={pokemon.id}>\r\n              <div className=\"card--title\">{pokemon.name}</div>\r\n              <div className=\"card--subtitle\">{pokemon.type.join(', ')}</div>\r\n              <img src={pokemon.image} alt={pokemon.name} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
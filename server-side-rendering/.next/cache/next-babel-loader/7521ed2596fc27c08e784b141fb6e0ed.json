{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\next-rendering-example\\\\cliente-side-rendering\\\\pages\\\\pokemon\\\\[name].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst usePokemon = name => {\n  const [pokemon, setPokemon] = React.useState(null);\n  React.useEffect(() => {\n    if (!name) {\n      setPokemon(null);\n      return;\n    }\n\n    const getPokemon = async () => {\n      const data = await fetch(`/api/pokemon?name=${escape(name)}`).then(async res => {\n        const text = await res.text();\n        return text ? JSON.parse(text) : {};\n      });\n\n      if (data && Object.keys(data).length > 0) {\n        setPokemon(_objectSpread(_objectSpread({}, data), {}, {\n          image: `/images/${data.id}.png`\n        }));\n      }\n    };\n\n    getPokemon();\n  }, [name]);\n  return pokemon;\n};\n\nexport default (() => {\n  const {\n    query: {\n      name\n    }\n  } = useRouter();\n  const pokemon = usePokemon(name);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Pokemon - \", name)), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Voltar\"), pokemon ? __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"card--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, pokemon.name), __jsx(\"span\", {\n    className: \"card--subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, pokemon.type.join(', ')), __jsx(\"img\", {\n    src: pokemon.image,\n    alt: pokemon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), Object.entries(pokemon.base).map(([key, value]) => __jsx(\"span\", {\n    className: \"card--details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, key, \":\"), value))) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, `Pokemon \"${name}\" não encontrado.`))));\n});","map":{"version":3,"sources":["D:/work/next-rendering-example/cliente-side-rendering/pages/pokemon/[name].js"],"names":["Head","Link","useRouter","usePokemon","name","pokemon","setPokemon","React","useState","useEffect","getPokemon","data","fetch","escape","then","res","text","JSON","parse","Object","keys","length","image","id","query","type","join","entries","base","map","key","value"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst usePokemon = (name) => {\n  const [pokemon, setPokemon] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!name) {\n      setPokemon(null);\n      return;\n    }\n\n    const getPokemon = async () => {\n      const data = await fetch(`/api/pokemon?name=${escape(name)}`).then(async res => {\n        const text = await res.text();\n        return text ? JSON.parse(text) : {};\n      });\n\n      if (data && Object.keys(data).length > 0) {\n        setPokemon({\n          ...data,\n          image: `/images/${data.id}.png`\n        });\n      }\n    }\n\n    getPokemon();\n  }, [name]);\n\n  return pokemon;\n}\n\nexport default () => {\n  const { query: { name } } = useRouter();\n  const pokemon = usePokemon(name);\n\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Pokemon - {name}</title>\n      </Head>\n\n      <main>\n        <div className=\"row\">\n          <a>Voltar</a>\n          {pokemon ? (\n            <div className=\"card\">\n              <h3 className=\"card--title\">{pokemon.name}</h3>\n              <span className=\"card--subtitle\">{pokemon.type.join(', ')}</span>\n              <img src={pokemon.image} alt={pokemon.name} />\n              {Object.entries(pokemon.base).map(([key, value]) => (\n                <span className=\"card--details\">\n                  <strong>{key}:</strong>\n                  {value}\n                </span>\n              ))}\n            </div>\n          ) : <h1>{`Pokemon \"${name}\" não encontrado.`}</h1>}\n        </div>\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
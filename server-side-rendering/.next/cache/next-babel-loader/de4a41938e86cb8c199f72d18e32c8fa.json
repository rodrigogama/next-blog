{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"D:\\\\work\\\\next-rendering-example\\\\cliente-side-rendering\\\\pages\\\\index.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nvar usePokemon = function usePokemon(query) {\n  _s();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pokemons = _React$useState2[0],\n      setPokemons = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!query) {\n      setPokemons(null);\n      return;\n    }\n\n    var getPokemon = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/api/search?q=\".concat(escape(query))).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                data = _context.sent;\n                setPokemons(data.map(function (e) {\n                  return _objectSpread(_objectSpread({}, e), {}, {\n                    image: \"/images/\".concat(e.id, \".png\")\n                  });\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getPokemon();\n  }, [query]);\n  return pokemons;\n};\n\n_s(usePokemon, \"Stk9XwXGyi9TwXhAWSiXSpPuw8Q=\");\n\nexport default function Home() {\n  _s2();\n\n  var _this = this;\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      query = _React$useState4[0],\n      setQuery = _React$useState4[1];\n\n  var pokemons = usePokemon(query);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Pokemon\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Search for a pokemon\",\n    type: \"search\",\n    value: query,\n    onChange: function onChange(event) {\n      return setQuery(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, pokemons && pokemons.map(function (pokemon) {\n    return __jsx(Link, {\n      key: pokemon.id,\n      href: \"pokemon/[\".concat(pokemon.id, \"]\"),\n      as: \"pokemon/\".concat(pokemon.name.toLowerCase()),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, __jsx(\"h3\", {\n      className: \"card--title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, pokemon.name), __jsx(\"span\", {\n      className: \"card--subtitle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, pokemon.type.join(', ')), __jsx(\"img\", {\n      src: pokemon.image,\n      alt: pokemon.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    })));\n  }))));\n}\n\n_s2(Home, \"iixLFOu/wDFTYrE5yff+SfBDlR4=\", false, function () {\n  return [usePokemon];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/work/next-rendering-example/cliente-side-rendering/pages/index.js"],"names":["React","Head","Link","usePokemon","query","useState","pokemons","setPokemons","useEffect","getPokemon","fetch","escape","then","res","json","data","map","e","image","id","Home","setQuery","event","target","value","pokemon","name","toLowerCase","type","join"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\n\r\nconst usePokemon = (query) => {\r\n  const [pokemons, setPokemons] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!query) {\r\n      setPokemons(null);\r\n      return;\r\n    }\r\n\r\n    const getPokemon = async () => {\r\n      const data = await fetch(`/api/search?q=${escape(query)}`).then(res => res.json());\r\n      setPokemons(data.map(e => ({\r\n        ...e,\r\n        image: `/images/${e.id}.png`\r\n      })));\r\n    }\r\n\r\n    getPokemon();\r\n  }, [query]);\r\n\r\n  return pokemons;\r\n}\r\n\r\n\r\nexport default function Home() {\r\n  const [query, setQuery] = React.useState('');\r\n  const pokemons = usePokemon(query);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Head>\r\n        <title>Pokemon</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      <main>\r\n        <input placeholder=\"Search for a pokemon\" type=\"search\" value={query} onChange={event => setQuery(event.target.value)} />\r\n\r\n        <div className=\"row\">\r\n          {pokemons && pokemons.map(pokemon => (\r\n            <Link key={pokemon.id} href={`pokemon/[${pokemon.id}]`} as={`pokemon/${pokemon.name.toLowerCase()}`}>\r\n              <div className=\"card\">\r\n                <h3 className=\"card--title\">{pokemon.name}</h3>\r\n                <span className=\"card--subtitle\">{pokemon.type.join(', ')}</span>\r\n                <img src={pokemon.image} alt={pokemon.name} />\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}